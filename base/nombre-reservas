CREATE TABLE roles (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE usuarios (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(100) UNIQUE NOT NULL,
    contraseña TEXT NOT NULL,
    rol_id INT REFERENCES roles(id)
);

CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    documento_identidad VARCHAR(20) NOT NULL UNIQUE,
    correo VARCHAR(100),
    telefono VARCHAR(20)
);

CREATE TABLE habitaciones (
    id SERIAL PRIMARY KEY,
    numero VARCHAR(10) UNIQUE NOT NULL,
    tipo VARCHAR(50) NOT NULL,  -- ej: simple, doble, suite
    precio_noche NUMERIC(10,2) NOT NULL,
    estado VARCHAR(20) DEFAULT 'disponible'  -- disponible, ocupada, mantenimiento
);

CREATE TABLE reservas (
    id SERIAL PRIMARY KEY,
    cliente_id INT REFERENCES clientes(id),
    habitacion_id INT REFERENCES habitaciones(id),
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    estado VARCHAR(20) DEFAULT 'reservada',  -- reservada, cancelada, completada
    fecha_reserva TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE facturas (
    id SERIAL PRIMARY KEY,
    reserva_id INT REFERENCES reservas(id),
    fecha_emision DATE NOT NULL,
    total NUMERIC(10,2) NOT NULL,
    estado VARCHAR(20) DEFAULT 'pendiente' -- pagada, pendiente, anulada
);

CREATE TABLE pagos (
    id SERIAL PRIMARY KEY,
    factura_id INT REFERENCES facturas(id),
    fecha_pago DATE NOT NULL,
    monto NUMERIC(10,2) NOT NULL,
    metodo_pago VARCHAR(50) NOT NULL -- efectivo, tarjeta, etc.
);

CREATE TABLE ingresos (
    id SERIAL PRIMARY KEY,
    reserva_id INT REFERENCES reservas(id),
    monto NUMERIC(10,2) NOT NULL,
    descripcion TEXT,
    fecha DATE DEFAULT CURRENT_DATE
);

CREATE TABLE egresos (
    id SERIAL PRIMARY KEY,
    descripcion TEXT NOT NULL,
    monto NUMERIC(10,2) NOT NULL,
    fecha DATE DEFAULT CURRENT_DATE
);

CREATE TABLE cuentas (
    id SERIAL PRIMARY KEY,
    codigo VARCHAR(100) NOT NULL UNIQUE,
    nombre VARCHAR(100) NOT NULL,
    tipo VARCHAR(20) NOT NULL,  -- Ej: activo, pasivo, ingreso, gasto
    nivel INT NOT NULL);

INSERT INTO cuentas (codigo, nombre, tipo, nivel) VALUES
('09999', 'ACTIVOS', 'activo', 1),
('08888', 'ACTIVO CORRIENTE', 'activo', 2);


--Vistas para los Reportes

CREATE OR REPLACE VIEW vistadellibro_diario AS
SELECT 
    fecha,
    'Ingreso' AS tipo,
    descripcion,
    monto
FROM ingresos
UNION ALL
SELECT 
    fecha,
    'Egreso' AS tipo,
    descripcion,
    monto
FROM egresos
ORDER BY fecha;


CREATE OR REPLACE VIEW vistadelregistro_huespedes AS
SELECT 
    c.nombre AS cliente,
    c.documento_identidad,
    c.correo,
    c.telefono,
    r.fecha_inicio,
    r.fecha_fin,
    h.numero AS habitacion,
    h.tipo AS tipo_habitacion,
    r.estado AS estado_reserva
FROM reservas r
JOIN clientes c ON r.cliente_id = c.id
JOIN habitaciones h ON r.habitacion_id = h.id
ORDER BY r.fecha_inicio;


CREATE OR REPLACE VIEW vistadelregistro_ocupacion AS
SELECT 
    h.numero AS habitacion,
    h.tipo,
    r.fecha_inicio,
    r.fecha_fin,
    r.estado AS estado_reserva,
    c.nombre AS cliente
FROM reservas r
JOIN habitaciones h ON r.habitacion_id = h.id
JOIN clientes c ON r.cliente_id = c.id
WHERE r.estado IN ('reservada', 'completada')
ORDER BY h.numero, r.fecha_inicio;